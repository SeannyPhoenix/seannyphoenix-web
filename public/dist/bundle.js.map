{
  "version": 3,
  "sources": ["../../src/csv/csv.ts", "../../src/readFile.ts", "../../src/csv.ts", "../../src/main.ts"],
  "sourcesContent": ["export type CSVData = {\n  headers: string[];\n  rows: string[][];\n};\n\nexport function parseCSV(raw: string): CSVData {\n  if (!raw.trim()) {\n    return { headers: [], rows: [] }; // Early return for empty input\n  }\n\n  const rawRows = raw.split(\"\\n\").map(trim);\n  const [headerRow, ...dataRows] = rawRows.map(split);\n\n  return {\n    headers: headerRow || [],\n    rows: dataRows,\n  };\n}\n\nfunction split(row: string) {\n  return row.split(\",\").map(trim);\n}\nfunction trim(s: string) {\n  return s.trim();\n}\n", "export default async function readFile(file: File): Promise<string> {\n  const reader = new FileReader();\n\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      if (reader.result) {\n        resolve(reader.result as string);\n      } else {\n        reject(new Error(\"Failed to read file\"));\n      }\n    };\n\n    reader.onerror = () => {\n      reject(new Error(\"Error reading file\"));\n    };\n\n    reader.readAsText(file);\n  });\n}\n", "import { CSVData, parseCSV } from \"csv/csv\";\nimport readFile from \"readFile\";\n\nexport async function processCSV(file: File) {\n  const data = await readFile(file);\n\n  console.log(data);\n\n  const raw = getRawDisplay(data);\n  const structured = parseCSV(data);\n\n  return {\n    rawDisplay: getRawDisplay(data),\n    structuredDisplay: getTableDisplay(structured),\n  };\n}\n\nfunction getRawDisplay(data: string): HTMLPreElement {\n  const pre = document.createElement(\"pre\");\n  pre.textContent = data;\n  return pre;\n}\n\nfunction getTableDisplay(data: CSVData): HTMLTableElement {\n  const table = document.createElement(\"table\");\n  const { headers, rows } = data;\n\n  table.appendChild(getHeaders(headers));\n  table.append(...getRows(rows));\n\n  return table;\n}\n\nfunction getHeaders(names: string[]) {\n  const header = document\n    .createElement(\"thead\")\n    .appendChild(document.createElement(\"tr\"));\n  header.append(\n    ...names.map((name) => {\n      const th = document.createElement(\"th\");\n      th.textContent = name.trim();\n      return th;\n    })\n  );\n\n  return header;\n}\n\nfunction getRows(data: string[][]) {\n  return data.map((row) => {\n    const tr = document.createElement(\"tr\");\n    row.forEach((cell) => {\n      const td = document.createElement(\"td\");\n      td.textContent = cell.trim();\n      tr.appendChild(td);\n    });\n    return tr;\n  });\n}\n", "import { processCSV } from \"csv\";\n\nconst fileInput = document.getElementById(\"csvFileInput\") as HTMLInputElement;\n\nconst tableSelector = document.getElementById(\n  \"tableSelector\"\n) as HTMLDivElement;\nconst rawSelector = document.getElementById(\"rawSelector\") as HTMLDivElement;\n\nconst rawData = document.getElementById(\"rawDataContainer\") as HTMLDivElement;\nconst tableData = document.getElementById(\n  \"tableDataContainer\"\n) as HTMLDivElement;\n\nif (!fileInput || !tableSelector || !rawSelector || !rawData || !tableData) {\n  console.error(\"One or more elements not found\");\n} else {\n  fileInput.addEventListener(\"change\", loadFile);\n\n  tableSelector.addEventListener(\"click\", () => {\n    tableData.style.display = \"block\";\n    rawData.style.display = \"none\";\n  });\n\n  rawSelector.addEventListener(\"click\", () => {\n    tableData.style.display = \"none\";\n    rawData.style.display = \"block\";\n  });\n}\n\nasync function loadFile(event: Event) {\n  const { files } = event.target as HTMLInputElement;\n  if (files?.length) {\n    try {\n      const { rawDisplay, structuredDisplay } = await processCSV(files[0]);\n\n      rawData.innerHTML = \"\";\n      rawData.appendChild(rawDisplay);\n\n      tableData.innerHTML = \"\";\n      tableData.appendChild(structuredDisplay);\n    } catch (error) {\n      console.error(\"Error reading file:\", error);\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
